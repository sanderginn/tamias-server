service: tamias-api

custom:
  secrets: ${file(secrets.json)}
  webpack:
    webpackConfig: ./webpack.config.js 
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  timeout: 30
  stage: ${self:custom.secrets.NODE_ENV}
  environment: 
    NODE_ENV: ${self:custom.secrets.NODE_ENV}
    DB_NAME: ${self:custom.secrets.DB_NAME}
    DB_USER: ${self:custom.secrets.DB_USER}
    DB_PASSWORD: ${self:custom.secrets.DB_PASSWORD}
    DB_HOST: ${self:custom.secrets.DB_HOST}
    DB_PORT: ${self:custom.secrets.DB_PORT}
  vpc:
    securityGroupIds:
      - ${self:custom.secrets.SECURITY_GROUP_ID}
    subnetIds:
      - ${self:custom.secrets.SUBNET1_ID}
      - ${self:custom.secrets.SUBNET2_ID}
      - ${self:custom.secrets.SUBNET3_ID}

functions:
  healthCheck:
    handler: handler.healthCheck
    events:
      - http:
          path: /
          method: get
          cors: true
  createBudget:
    handler: handler.createBudget
    events:
      - http:
          path: budgets
          method: post
          cors: true
  getBudget:
    handler: handler.getBudget
    events:
      - http:
          path: budgets/{id}
          method: get
          cors: true
  getAllBudgets:
    handler: handler.getAllBudgets
    events:
     - http:
         path: budgets
         method: get
         cors: true
  updateBudget:
    handler: handler.updateBudget
    events:
     - http:
         path: budgets/{id}
         method: put
         cors: true
  deleteBudget:
    handler: handler.deleteBudget
    events:
     - http:
         path: budgets/{id}
         method: delete
         cors: true

plugins:
  - serverless-offline
  - serverless-webpack

package:
  individually: true